#!/bin/bash

configFile="configCacheScratch"

allocatorPath="../benchmarks/cache-scratch/Debug/"

allocatorName="cache-scratch"

outputFile="../../Output/$1/outputCacheScratch"

argumentsMeaning="<nThreads> <objectSize> <noOfObjectsToAllocate> <noOfTimesToWriteOnTheSameObject>"

baseOS=$2

i=0

while read line
do
	if [ $i == 0 ]; then
		nThreadsTemp=$line
	elif [ $i == 1 ]; then
		objTemp=$line
	elif [ $i == 2 ]; then
		iterTemp=$line
	elif [ $i == 3 ]; then
		repTemp=$line
	fi
	(( i++ ))
done < $configFile


IFS=' '
read -a nThreads <<< "$nThreadsTemp"
read -a obj <<< "$objTemp"	
read -a iter <<< "$iterTemp"
read -a rep <<< "$repTemp"


echo "Going to execute" $allocatorName "on" configFile
echo $argumentsMeaning > $outputFile


for objIndex in "${obj[@]}"
do
    for iterIndex in "${iter[@]}"
    do
        for repIndex in "${rep[@]}"
        do
    	    threadIndex=1
	    while [ $threadIndex -le ${nThreads[0]} ]
	    do
		c=0
		output="$threadIndex $objIndex $iterIndex $repIndex"
		while [ $c -le 2 ]
		do
			echo "running on $c alocator"
		    if [ $c == 2 ] && [ "$baseOS" == "macos" ]; then
			export DYLD_INSERT_LIBRARIES="../allocators/Hoard/src/libhoard.dylib"
			echo "DYLD PATH IS = $DYLD_INSERT_LIBRARIES"
		    elif [ $c == 2 ]; then
			export LD_PRELOAD="../allocators/Hoard/src/libhoard.so"
			echo "LD_PRELOAD_PATH is $LD_PRELOAD"
		    elif [ $c != 2 ] && [ "$baseOS" == "macos" ]; then
			export DYLD_INSERT_LIBRARIES=
                        echo "DYLD PATH IS = $DYLD_INSERT_LIBRARIES"
		    else
			export LD_PRELOAD=
			echo "LD_PRELOAD_PATH is $LD_PRELOAD"
		    fi	
	            temp="$c $threadIndex $objIndex $iterIndex $repIndex"  
         #	    temp1=`$allocatorPath/$allocatorName $temp`
		    $allocatorPath/$allocatorName $temp
		    echo "=$c..."
           	    if [ ! $temp1 ]; then
                        temp1=-1
                    fi
	 #           echo "$c on $threadIndex performing $iterIndex iterations=$temp1"
		    output="$output $temp1"
		    (( c++ ))      
	        done
		if [ "$baseOS" == "macos" ]; then
		    export DYLD_INSERT_LIBRARIES=
		    echo "DYLD PATH IS = $DYLD_INSERT_LIBRARIES"
		else
		    export LD_PRELOAD=
		    echo "LD_PRELOAD_PATH is $LD_PRELOAD"
		fi
		work=$(( threadIndex * iterIndex ))
                temp="0 1 $objIndex $work $repIndex"
         #       temp1=`$allocatorPath/$allocatorName $temp`
		$allocatorPath/$allocatorName $temp
                echo "=0,1..."
                if [ ! $temp1 ]; then
                    temp1=-1
                fi
		echo "0,1 on 1 thread performing $work iterations=$temp1"
                output="$output $temp1"
                echo $output >> $outputFile
		(( threadIndex++ ))    
	    done
        done
    done
done
    
