#!/bin/bash

configFile="configThreadTest"

allocatorPath="../benchmarks/thread-test/Debug/"

allocator="thread-test"

outputFile="../../Output/$1/outputThreadTest"

argumentsMeaning="<nThreads> <objectSize> <noOfIterations> <noOfRepetitions>"

i=0

while read line
do
	if [ $i == 0 ]; then
		nThreadsTemp=$line
	elif [ $i == 1 ]; then
		objTemp=$line
	elif [ $i == 2 ]; then
		iterTemp=$line
	elif [ $i == 3 ]; then
		repTemp=$line
	fi
	(( i++ ))
done < $configFile


IFS=' '
read -a nThreads <<< "$nThreadsTemp"
read -a obj <<< "$objTemp"	
read -a iter <<< "$iterTemp"
read -a rep <<< "$repTemp"


echo "Going to execute" $allocatorName "on" configFile
echo $argumentsMeaning > $outputFile


for objIndex in "${obj[@]}"
do
    for iterIndex in "${iter[@]}"
    do
        for repIndex in "${rep[@]}"
        do
    	    threadIndex=1
	    while [ $threadIndex -le ${nThreads[0]} ]
	    do
		c=0
		output="$threadIndex $objIndex $iterIndex $repIndex"
		while [ $c -le 2 ]
		do
                    if [ $c == 0 ]; then
                        allocatorName="$allocator-Normal"
                    elif [ $c == 1 ]; then
                        allocatorName="$allocator-WaitFreePool"
                    elif [ $c == 2 ]; then
                        allocatorName="$allocator-Hoard"
                    elif [ $c == 3 ]; then
                        allocatorName="$allocator-Streamflow"
                    fi
		    temp="$c $threadIndex $objIndex $iterIndex $repIndex"
		    cd $allocatorPath
                    temp1=`$allocatorName $temp`
		    cd -
                    if [ ! $temp1 ]; then
                        temp1=-1
                    fi
	            temp="$c $threadIndex $objIndex $iterIndex $repIndex" 
		    cd $allocatorPath 
                    temp1=`$allocatorName $temp`
		    cd -
		    if [ ! $temp1 ]; then
			temp1=-1
		    fi
                    echo "$c on $threadIndex performing $iterIndex iterations=$temp1"
		    output="$output $temp1"
		    (( c++ ))      
	        done
		allocatorName="$allocator-Normal"
		work=$(( threadIndex * iterIndex ))
                temp="0 1 $objIndex $work $repIndex"
                temp1=`$allocatorPath/$allocatorName $temp`
		if [ ! $temp1 ]; then
                    temp1=-1
                fi
                echo "0,1 on 1 thread performing $work iterations=$temp1"
                output="$output $temp1"
                echo $output >> $outputFile
		(( threadIndex++ ))    
	    done
        done
    done
done
    
